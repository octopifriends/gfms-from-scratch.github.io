# Pre-commit hooks for geoAI repository
# Ensures code quality and prevents critical anti-patterns from being committed
#
# Installation:
#   conda activate geoAI
#   pre-commit install
#
# Run manually:
#   pre-commit run --all-files

repos:
  # Custom anti-pattern detection (CRITICAL - BLOCKS COMMIT)
  - repo: local
    hooks:
      - id: check-antipatterns
        name: Check for critical anti-patterns
        entry: python scripts/check_antipatterns.py
        language: system
        types: [python]
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        pass_filenames: true
        stages: [commit]

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
        exclude: ^book/_quarto\.yml$
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=10240']  # 10MB limit
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: debug-statements
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python code formatting (MANDATORY - FAILS COMMIT)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format Python code with Black
        language_version: python3
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        args: [--line-length=88, --target-version=py311]

  # Import sorting (MANDATORY - FAILS COMMIT)
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        args: [--profile=black, --line-length=88]

  # Code linting (MANDATORY - FAILS COMMIT)
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        name: Lint with flake8
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
          - pep8-naming
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503,D100,D101,D102,D103,D104,D105,D107
          - --per-file-ignores=__init__.py:F401,tests/*:D,scripts/*:D

  # Type checking (MANDATORY - FAILS COMMIT)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        name: Type check with mypy
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/|tests/)
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-setuptools
        args:
          - --ignore-missing-imports
          - --follow-imports=silent
          - --warn-redundant-casts
          - --warn-unused-ignores
          - --disallow-any-generics
          - --check-untyped-defs
          - --no-implicit-reexport
          - --disallow-untyped-defs

  # Security scanning (MANDATORY - FAILS COMMIT)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        name: Security check with bandit
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/|tests/)
        args:
          - -r
          - -f
          - json
          - -c
          - bandit.yaml

  # Docstring checking
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: Check docstrings with pydocstyle
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/|tests/|scripts/)
        args:
          - --convention=google
          - --add-ignore=D100,D101,D102,D103,D104,D105,D107

  # Documentation checks for course materials
  - repo: local
    hooks:
      - id: check-course-structure
        name: Validate course material structure
        entry: python scripts/check_course_structure.py
        language: system
        files: ^book/.*\.(qmd|ipynb)$
        pass_filenames: true
        stages: [commit]

  # Jupyter notebook cleaning
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.8.7
    hooks:
      - id: nbqa-black
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        args: [--line-length=88]
      - id: nbqa-isort
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)
        args: [--profile=black]

  # Remove notebook outputs
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        exclude: ^(LLMs-from-scratch/|_extensions/|\.claude/)

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: ^(book/_quarto\.yml|environment\.yml)$

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [check-antipatterns, check-course-structure]  # Skip local hooks in CI
  submodules: false