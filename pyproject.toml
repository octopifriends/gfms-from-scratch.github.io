[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geogfm"
version = "0.1.0"
description = "Geospatial Foundation Model components for the course"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "GEOG 288KC" }]
license = { text = "MIT" }
dependencies = []  # Heavy runtime deps (PyTorch, GDAL, etc.) come from the conda env

[tool.setuptools.packages.find]
where = ["."]
include = ["geogfm*"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | LLMs-from-scratch
  | _extensions
  | \.claude
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["LLMs-from-scratch/*", "_extensions/*", ".claude/*"]

# MyPy type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "pandas.*",
    "numpy.*",
    "scipy.*",
    "sklearn.*",
    "torch.*",
    "torchvision.*",
    "rasterio.*",
    "geopandas.*",
    "xarray.*",
    "earthengine.*",
    "folium.*",
    "cartopy.*",
    "PIL.*",
    "cv2.*",
    "transformers.*",
    "datasets.*",
    "accelerate.*",
    "lightning.*",
    "kornia.*",
    "einops.*",
    "torchgeo.*",
    "timm.*",
    "segmentation_models_pytorch.*",
    "efficientnet_pytorch.*",
    "pretrainedmodels.*",
    "torchmetrics.*",
    "hydra.*",
    "omegaconf.*",
]
ignore_missing_imports = true

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "LLMs-from-scratch", "_extensions", ".claude"]
skips = ["B101", "B601", "B602", "B603", "B607"]

# Pydocstyle docstring checking
[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]
match-dir = "^(?!(LLMs-from-scratch|_extensions|\\.claude|tests|scripts)).*"

# Coverage.py configuration
[tool.coverage.run]
source = ["geogfm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "LLMs-from-scratch/*",
    "_extensions/*",
    ".claude/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


